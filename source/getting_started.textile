h2. Getting Started

This guide covers getting up and running with Alchemy CMS. After reading it, you should be familiar with:

* Installing and creating a new application with Alchemy CMS
* Creating a user and logging in for the first time.

endprologue.




h3. Guide Assumptions

This guide is designed for beginners who want to get started with Alchemy CMS from scratch. It does not assume that you have any prior experience with Alchemy CMS. However, to get the most out of it, you need to have some prerequisites installed:

* The "Ruby":http://www.ruby-lang.org/en/downloads programming language
* The dependency manager "Bundler":http://gembundler.com/
* At least one of these databases: "MySQL":http://www.mysql.com/downloads/mysql, "PostgreSQL":http://www.postgresql.org/download/ or "SQLite":http://www.sqlite.org/download.html
* The image processor "ImageMagick":http://www.imagemagick.org/script/install-source.php

NOTE: Alchemy CMS needs at least version 6.4 of ImageMagick

It is highly recommended to familiarize yourself with Ruby on Rails before using Alchemy CMS.
You will understand much more and see things clearer if you know about the basics of Ruby on Rails.

Installing Rails on your computer is easy. There are many excellent resources on the internet for learning Ruby on Rails, including:

* "Try Ruby":http://tryruby.org
* "Getting Started with Rails":http://guides.rubyonrails.org/v3.1.3/getting_started.html
* "Rails for Zombies":http://railsforzombies.org
* "Railscasts":http://railscasts.com


h3. Installation

The installing of Alchemy CMS is very easy.
You just need to run the gem command.

<shell>
gem install alchemy_cms
</shell>

INFO: You now have the newest Alchemy CMS gem installed on your system!


h4. Create a new application

The gem provides an executable file that can automagically create new rails applications with a pre-configured Alchemy CMS engine.
While the installation process you will get asked about your local development environment. Just follow the instructions.

<shell>
alchemy new YOUR_APP_NAME
</shell>

The following parameters are available for the installer:
* --database=sqlite3
* --scm=git/svn

INFO: The installer creates a database, migrates the tables and also seeds them. After finishing, your application is ready to start!


h4. Install into an existing Rails application

If you already have an existing Rails application, you can require the Alchemy CMS gem in your app.

Just add this line to your Gemfile.

<pre>
gem 'alchemy_cms', '~> 2.7.1'
</pre>

Since Alchemy CMS is a mountable engine, you need to define the mountpoint in your <code>config/routes.rb</code> file.

<pre>
MyApp::Application.routes.draw do
  mount Alchemy::Engine => '/'
end
</pre>

INFO: You can mount Alchemy on every route you want. <code>pages</code>, <code>cms</code>, <code>typo3</code>, what ever you want. Most of the time you go with the root route.

Now you need to run bundler for installing the dependencies.
<shell>
bundle install
</shell>

It´s recommended to create the folders Alchemy CMS needs.

<shell>
bundle exec rails generate alchemy:scaffold
</shell>

Copy the database migration files to your application.
<shell>
bundle exec rake alchemy:install:migrations
</shell>

Migrate the database to get the table structure.
<shell>
bundle exec rake db:migrate
</shell>

Seed the database with initial data.
<shell>
bundle exec rake alchemy:db:seed
</shell>

INFO: You´re done! Alchemy is now available in your Rails project!

h3. Running Alchemy CMS!

Now that you have Alchemy CMS successfully installed, let's move on by creating your first user with administrative privilegs.

You just need to start a local ruby server on your development machine.

<shell>
cd YOUR_APP_NAME && rails s
</shell>

Open a browser window and navigate to "http://localhost:3000":http://localhost:3000.
You will be greeted with a screen that is prompting you to create the first user.

<b>Congratulations, you can now access the backend!</b>

h3. Next steps

As next you should to read about:

* "Alchemy's architecture":architecture.html
* "The Standard Set":standard_set.html
* Customizing "page layouts":create_page_layouts.html and "elements":create_elements.html.

&nbsp;
