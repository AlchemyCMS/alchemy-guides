h2. Creating own page layouts

endprologue.


h3. Defining page layouts

You can create your own page layouts by editing the file <code>/config/alchemy/page_layouts.yml</code>.

<pre>
name: String                  # The name of the layout used for views and inside the database. You can render a layout with the render_page_layout(name) helper.
unique: Bool                  # Pass true and the user can only choose this layout once inside a language tree.
hide: Bool                    # Pass true to hide this layout from the user.
elements: Array               # A list of element names that can be placed on this layout i.e. [text, picture]. Elements are defined inside the elements.yml file.
autogenerate: Array           # A list of element names that are autogenerated after creating the Page.
searchresults: Bool           # Pass true to enable rendering the searchresults of the fulltext-search.
layoutpage: Bool              # Layoutpages are outside the normal pagetree and can be used to place "global" language independent Elements.
cache: Bool                   # Pass false to disable the caching for this pages.
feed: Bool                    # Pass true to enable a RSS feed of news elements from this page.
redirects_to_external: Bool   # Pass true to disable normal page rendering and redirect to a external page instead.
controller: controller_name   # Controller to use instead of the default PagesController
action: action_name           # Controllers action to use instead of the default PagesController#show
</pre>

Every page layout needs at least a name. You dont need to set every option. It depends on what you need for pages with that layout type.

*Example:*

Lets say you want to create a contact page with a headline element, a formular and text-element on it.
This page should be unique per language, because you dont want to give your content-manager the possibility to create more than one contact-forms.
This page may not be cached, because of rails authenticity_token.
We also want to autogenerate the headline and the contactform element on when the page gets created.

<code>/config/alchemy/page_layouts.yml</code>

<pre>
- name: contact
  cache: false
  unique: true
  elements: [headline, contactform, text]
  autogenerate: [headline, contactform]
</pre>


h3. Creating/Generating the page layout files

Every page layout defined in the page_layouts.yml file should have a view partial located in <code>/config/alchemy/page_layouts/</code>.

There is no need to create these partials manually. Alchemy CMS comes with a rails generator task which creates these partial files for you.
So after defining the page layouts in your page_layouts.yml, you can generate all the corresponding partials for them.

<shell>rails g alchemy:page_layouts</shell>

Using the example above, which defines a contact layout, the generator will create a partial named <code>_contact.html.erb</code>.

h3. I18n translation of page layout names

Page layout names are passed through the I18n library. You can translate them in your alchemy namespaced locale files.

*Example:*

<code>config/locales/alchemy.de.yml</code>

<pre>
# encoding: UTF-8
de:
  alchemy:
    page_layout_names:
      contact: Kontakt
      search: Suche
</pre>

