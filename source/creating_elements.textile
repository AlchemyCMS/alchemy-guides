h2. Creating own Elements

Elements are one of the main parts of "Alchemy's content storing technology":architecture.html.
Read more about elements and their role "here":elements.html.

You, as a webdeveloper, has full control over the layout and configuration of each element.
In this guide you will learn:

* How to create an element definition
* How to provide it to your users

endprologue.



h3. Defining an element layout

Lets create an article element for your website.
The element layout will be defined in the <code>config/alchemy/elements.yml</code> file.

NOTE: Run `rails generate alchemy:scaffold` to generate all files and folders Alchemy needs.

<pre>
- name: article
  unique: true
  contents:
  - name: image
    type: EssencePicture
  - name: headline
    type: EssenceText
    take_me_for_preview: true
  - name: text
    type: EssenceRichtext
</pre>

This element is named gallery. It can be placed just once per page and it has three "contents":elements.html from type <code>EssencePicture</code>, <code>EssenceText</code> and <code>EssenceRichtext</code>.

h3. Generating the partials

After typing the line below in your terminal, the rails generator will create the elements editor and view files with its code.

<shell>
	rails g alchemy:elements --skip
</shell>

INFO: You can find the generated files in the <code>app/views/alchemy/elements/</code> folder of your project.

h3. Assigning an element to page layouts

Before you can play around with it in the backend, you need to define on which page types your element can be placed. This depends on the pageÂ´s page_layout, so open <code>config/alchemy/page_layouts.yml</code> in your favorite text editor and put the name of your new element into the list of available elements for a specific page layout.

<pre>
- name: standard
  elements: [article]
  autogenerate: [article]
</pre>

You can now place the article element on every page which has the page layout named `standard`.
And all in the future created pages that are from standard page layout will automatically generate the article element for you.

Nice, isn't it?

h3. Customizing the view partial

The Alchemy element generator creates a html layout for you.

It looks like this:

<pre>
<div class="gallery" id="<%= element_dom_id(element) %>"<%= element_preview_code(element) -%>>
  <div class="image">
    <%= render_essence_view_by_name(element, 'image') %>
  </div>
  <div class="headline">
    <%= render_essence_view_by_name(element, 'headline') %>
  </div>
  <div class="text">
    <%= render_essence_view_by_name(element, 'text') %>
  </div>
</div>
</pre>

Pretty useful, but maybe not what you need. No problem, feel free to customize it to fit your needs. It's yours :).

Do you see this <code><%= %></code> markup?

This is "ERB":http://en.wikipedia.org/wiki/ERuby Alchemy has tons of so called helpers that render content for you.

For further information on the several helpers Alchemy provides please "have a look into the PagesHelper documentation":http://rdoc.info/github/magiclabs/alchemy_cms/Alchemy/PagesHelper.html.

INFO: The view partial of an element is used for all elements that are placed on a page. If you want to have a different html layout for a specific element create a new one and place it on a specific page layout. It is common to have lots of element layouts defined that are grouped on several page layouts.

Maybe now is a good time to to learn something about "page layouts":page_layouts.html.

&nbsp;
