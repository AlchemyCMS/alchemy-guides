h2. Getting Started

This guide covers getting up and running with Alchemy CMS. After reading it, you should be familiar with:

* Installing and creating a new application with Alchemy CMS
* Creating a user and logging in for the first time.

endprologue.




h3. Guide Assumptions

This guide is designed for beginners who want to get started with Alchemy CMS from scratch. It does not assume that you have any prior experience with Alchemy CMS. However, to get the most out of it, you need to have some prerequisites installed:

* The "Ruby":http://www.ruby-lang.org/en/downloads programming language
* The "RubyGems":http://rubyforge.org/frs/?group_id=126 packaging system
* At least one of these databases: "MySQL":http://www.mysql.com/downloads/mysql, or "SQLite":http://www.sqlite.org/download.html
* The image processor "ImageMagick":http://www.imagemagick.org/script/install-source.php

NOTE: Alchemy CMS needs at least version 6.4 of ImageMagick

It is highly recommended to familiarize yourself with Ruby on Rails before using Alchemy CMS.
You will understand much more and see things clearer if you know about the basics of Ruby on Rails.

Installing Rails on your computer is easy. There are many excellent resources on the internet for learning Ruby on Rails, including:

* "Try Ruby":http://tryruby.org
* "Getting Started with Rails":http://guides.rubyonrails.org/getting_started.html
* "Rails for Zombies":http://railsforzombies.org/labs
* "Rails Guides":http://guides.rubyonrails.org/




h3. What is Alchemy CMS?

Alchemy CMS is a full featured Content Management System (CMS). It comes with an extreme flexible content storing architecture and a gorgeous user interface. Alchemy CMS is shipped with a production ready website that can be used “out of the box”, but it is mostly used for building individual web-applications that are rich in functionality. The name is program: Alchemy CMS is a kind of chemical construction kit for developers that want to build professional web-applications in a very short time. Also content-managers are enthusiastic about Alchemy CMS because of its clear and powerful backend that is very easy to use.




h3. Create a new application

Use these Rails template to make a new Rails project with Alchemy installed.

<shell>
rails _2.3.14_ YOUR_APP_NAME -d mysql -m https://raw.github.com/magiclabs/alchemy-rails-templates/master/install_alchemy.rb
</shell>

After that you need to edit the file <code>/config/environment.rb</code> and add the following lines into the Initializer block for configuration:

<pre>
config.gem 'acts_as_ferret', :version => '0.4.8'
config.gem 'authlogic', :version => '~>2'
config.gem 'awesome_nested_set', :version => '>=1.4.3'
config.gem 'declarative_authorization', :version => '>=0.4.1'
config.gem "fleximage", :version => ">=1.0.1" 
config.gem 'fast_gettext', :version => '>=0.4.8'
config.gem 'gettext_i18n_rails', :version => '>=0.2.3'
config.gem 'gettext', :lib => false, :version => '>=1.93.0'
config.gem 'rmagick', :lib => "RMagick2", :version => '>=2.12.2'
config.gem 'tvdeyen-ferret', :version => '>=0.11.8.1', :lib => 'ferret'
config.gem 'will_paginate', :version => '2.3.12'
config.gem 'mimetype-fu', :version => '>=0.1.2', :lib => 'mimetype_fu'
config.load_paths += %W( vendor/plugins/alchemy/app/sweepers )
config.load_paths += %W( vendor/plugins/alchemy/app/middleware )
config.i18n.load_path += Dir[Rails.root.join('vendor/plugins/alchemy/config', 'locales', '*.{rb,yml}')]
</pre>

Now you can create, migrate and seed the database.

<shell>
rake db:create
rake db:migrate
rake db:migrate:alchemy
</shell>

Now just copy the javascripts and stylesheets into the public folder of your app.
Alchemy has a rake task for doing that:

<shell>
rake alchemy:assets:copy:all
</shell>

You´re now able to start your local server

<shell>
script/server
</shell>

h3. Install into an existing rails application

In your application´s folder just type

<shell>
script/plugin install git://github.com/magiclabs/alchemy.git
</shell>

After that you need to edit the file <code>/config/environment.rb</code> and add the following lines into the Initializer block for configuration:

<pre>
config.gem 'acts_as_ferret', :version => '0.4.8'
config.gem 'authlogic', :version => '~>2'
config.gem 'awesome_nested_set', :version => '>=1.4.3'
config.gem 'declarative_authorization', :version => '>=0.4.1'
config.gem "fleximage", :version => ">=1.0.1" 
config.gem 'fast_gettext', :version => '>=0.4.8'
config.gem 'gettext_i18n_rails', :version => '>=0.2.3'
config.gem 'gettext', :lib => false, :version => '>=1.93.0'
config.gem 'rmagick', :lib => "RMagick2", :version => '>=2.12.2'
config.gem 'tvdeyen-ferret', :version => '>=0.11.8.1', :lib => 'ferret'
config.gem 'will_paginate', :version => '2.3.12'
config.gem 'mimetype-fu', :version => '>=0.1.2', :lib => 'mimetype_fu'
config.load_paths &43;= %W( vendor/plugins/alchemy/app/sweepers )
config.load_paths &43;= %W( vendor/plugins/alchemy/app/middleware )
config.i18n.load_path &43;= Dir[Rails.root.join('vendor/plugins/alchemy/config', 'locales', '*.{rb,yml}')]
</pre>

Now you need to install these plugins:

<shell>
script/plugin install git://github.com/rails/acts_as_list.git
script/plugin install git://github.com/technoweenie/attachment_fu.git
script/plugin install git://github.com/iain/i18n_label.git *) Not needed any more in current next_stable (beta) branch
script/plugin install git://github.com/magiclabs/jrails.git
script/plugin install -r rails2 git://github.com/tvdeyen/tinymce_hammer.git
script/plugin install git://github.com/delynn/userstamp.git
</shell>

Then create your database and migrate:

<shell>
rake db:create
rake db:migrate:alchemy
</shell>

Put this to your <code>db/seeds.rb</code>.

<pre>
Alchemy::Seeder.seed!
</pre>

And seed your database to create the page tree structure.

<shell>
rake db:seed
</shell>

Copy Alchemy assets to public folder

<shell>
rake alchemy:assets:copy:all
</shell>

Now you´re able to start your server

<shell>
script/server
</shell>

h3. Running Alchemy CMS!

Open a browser window and navigate to "http://localhost:3000/admin":http://localhost:3000/admin.
You will be greeted with a screen that is prompting you to create the first user.

INFO: Congratulations, you can access the backend now!

&nbsp;